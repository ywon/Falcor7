# Load scene
sceneBuilder.importScene("scene-v4.pbrt")

# Create animation
# anim_time = 3.333333 # 100 frames for 30 FPS
anim_time = 100 # * 60 fps = 600 frames
camera = sceneBuilder.selectedCamera

def add_animation_using_transform(transforms):
    if "counter" not in add_animation_using_transform.__dict__:
        add_animation_using_transform.counter = 0

    anim = sceneBuilder.createAnimation(camera,
                                        f"motion{add_animation_using_transform.counter}",
                                        anim_time)
    if anim is None:
        raise Exception("name of anim", f"motion{add_animation_using_transform.counter}")
    time_per_keyframe = anim_time/(len(transforms) - 1)
    times = [x * time_per_keyframe for x in range(len(transforms))]
    for time, transform in zip(times, transforms):
        anim.addKeyframe(time, transform)

    sceneBuilder.addAnimation(anim)

    add_animation_using_transform.counter += 1

# Set this using Mogwai viewports
transforms = [
Transform(position = float3(4.44314, 16.9345, 49.9102), target = float3(4.32867, 16.8212, 48.9233), up = float3(-0.0130485, 0.993566, -0.112506)),
Transform(position = float3(16.5645, 13.1336, 16.2665), target = float3(16.1301, 12.8568, 15.4094), up = float3(-0.000441628, 1, -0.000862404)),
Transform(position = float3(6.59085, 10.9478, -2.64731), target = float3(6.02071, 11.1264, -3.44921), up = float3(0.00603911, 0.999946, 0.00850811)),
Transform(position = float3(-2.51434, 13.8962, -0.473869), target = float3(-3.12771, 14.5159, 0.0157319), up = float3(-0.00428957, 0.999985, 0.00346424)),
Transform(position = float3(8.0101, 33.0592, 8.01489), target = float3(7.70104, 32.4534, 7.28178), up = float3(-0.000311365, 1, -0.000739659)),
Transform(position = float3(0.743441, 13.206, 38.1216), target = float3(0.297987, 12.9002, 37.2801), up = float3(0, 1, 0)),
Transform(position = float3(13.6684, 8.37933, 9.91465), target = float3(12.8256, 8.07456, 9.47108), up = float3(0.00212157, 0.999997, 0.00111866)),
Transform(position = float3(2.10325, 4.32628, 3.12813), target = float3(1.35894, 4.10077, 2.49953), up = float3(0, 1, 0)),
Transform(position = float3(3.16203, 13.5966, 4.18031), target = float3(2.33959, 13.7257, 4.73435), up = float3(0.0107663, 0.999915, -0.00731419)),
Transform(position = float3(-13.6881, 14.4903, -5.30853), target = float3(-13.7649, 14.0771, -6.21595), up = float3(0, 1, 0)),
Transform(position = float3(-3.55966, 10.1061, -13.2864), target = float3(-2.64646, 9.83417, -13.59), up = float3(-0.00688802, 0.999974, 0.00229556)),
Transform(position = float3(-8.85666, 13.1854, -14.5926), target = float3(-8.01569, 13.1801, -15.1336), up = float3(-0.000847463, 0.999999, 0.000545855)),
Transform(position = float3(3.46926, 17.3364, -13.2844), target = float3(3.71129, 17.7378, -14.1677), up = float3(0.0011084, 0.999991, -0.00399626)), 
Transform(position = float3(1.93754, 14.7958, -7.69419), target = float3(2.48159, 14.353, -6.98146), up = float3(0.000823217, 0.999999, 0.00107844)),
Transform(position = float3(11.5723, 14.9363, 0.993876), target = float3(10.6894, 14.9128, 0.524957), up = float3(0.00088882, 0.999999, 0.000475019)),
Transform(position = float3(16.2162, 14.0273, 6.38201), target = float3(15.4318, 13.4226, 6.24393), up = float3(-0.000395472, 1, -6.96149e-05)),
Transform(position = float3(4.44314, 16.9345, 49.9102), target = float3(4.32867, 16.8212, 48.9233), up = float3(-0.0130485, 0.993566, -0.112506)), 
Transform(position = float3(0.151711, 22.1385, 15.6331), target = float3(-0.289458, 21.4846, 15.0185), up = float3(-0.00022243, 1, -0.000309871)),
Transform(position = float3(-12.7002, 17.6288, 15.2107), target = float3(-13.5849, 17.1662, 15.155), up = float3(-0.00402203, 0.999992, -0.000253474)),
Transform(position = float3(-8.01894, 19.9264, 8.42536), target = float3(-7.50329, 20.2547, 7.63395), up = float3(-0.000519976, 1, 0.00079806)),
]

add_animation_using_transform(transforms)





